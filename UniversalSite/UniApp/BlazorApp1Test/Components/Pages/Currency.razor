@page "/currency"
@using System.Text.Json;
@using Newtonsoft.Json
@using System.Net;
@using System.Xml.Serialization;

@attribute [StreamRendering]
@rendermode InteractiveServer
<PageTitle>Currency</PageTitle>


@if (valuts != null)
{
    dictValuts.TryGetValue(firstValute, out ValCursValute a);
    dictValuts.TryGetValue(secondValute, out ValCursValute b);
    @* <input type="number" @bind="amount" style="width:120px"/>
    <select @bind="firstValute" style="height:30px">
        @foreach (var valut in valuts)
        {
            <option value="@valut.Name">@valut.CharCode</option>
        }
    </select>
    <a>@(Math.Round(amount*double.Parse(a.VunitRate)/double.Parse(b.VunitRate), 2))</a>
    <select @bind="secondValute" style="width:30px">
        @foreach (var valut in valuts)
        {
            <option value="@valut.Name">@valut.CharCode</option>
        }
    </select> *@

    <div class="input-group" style="max-width:510px;/*  position: absolute; top: 35%; left: 50%; margin: -125px 0 0 -125px; */">
        <input type="text" style="width:150px" class="form-control" @bind="amount" aria-label="Valut amount (with dot and two decimal places)">
        <select @bind="firstValute" style="width:85px" class="form-select">
            @foreach (var valut in valuts)
            {
                <option value="@valut.Name">@valut.CharCode</option>
            }
        </select>
        <span class="input-group-text"> -> </span>
        <select @bind="secondValute" style="width:85px" class="form-select">
            @foreach (var valut in valuts)
            {
                <option value="@valut.Name" >@valut.CharCode</option>
            }
        </select>
        <span style="width:150px" class="input-group-text">@(Math.Round(amount * double.Parse(a.VunitRate) / double.Parse(b.VunitRate), 2))</span>
    </div>
}

@code {
    string line;
    ValCurs data;
    ValCursValute[] valuts;
    string firstValute = "Австралийский доллар";
    string secondValute = "Азербайджанский манат";
    double amount = 1;
    Dictionary<string, ValCursValute> dictValuts = new Dictionary<string, ValCursValute>();

    protected override async Task OnInitializedAsync()
    {
        WebRequest request = WebRequest.Create($"https://www.cbr-xml-daily.ru/daily_utf8.xml");
        WebResponse response = request.GetResponse();
        using (Stream stream = response.GetResponseStream())
        {
            using (StreamReader reader = new StreamReader(stream))
            {
                line = reader.ReadToEnd();

                XmlSerializer serializer = new XmlSerializer(typeof(ValCurs));
                using (StringReader reader1 = new StringReader(line))
                {
                    data = (ValCurs)serializer.Deserialize(reader1);
                }
            }
        }

        valuts = data.Valute;

        foreach (var valut in valuts)
        {
            dictValuts.Add(valut.Name, valut);
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ValCurs
    {

        private ValCursValute[] valuteField;

        private string dateField;

        private string nameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Valute")]
        public ValCursValute[] Valute
        {
            get
            {
                return this.valuteField;
            }
            set
            {
                this.valuteField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Date
        {
            get
            {
                return this.dateField;
            }
            set
            {
                this.dateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ValCursValute
    {

        private ushort numCodeField;

        private string charCodeField;

        private ushort nominalField;

        private string nameField;

        private string valueField;

        private string vunitRateField;

        private string idField;

        /// <remarks/>
        public ushort NumCode
        {
            get
            {
                return this.numCodeField;
            }
            set
            {
                this.numCodeField = value;
            }
        }

        /// <remarks/>
        public string CharCode
        {
            get
            {
                return this.charCodeField;
            }
            set
            {
                this.charCodeField = value;
            }
        }

        /// <remarks/>
        public ushort Nominal
        {
            get
            {
                return this.nominalField;
            }
            set
            {
                this.nominalField = value;
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }

        /// <remarks/>
        public string VunitRate
        {
            get
            {
                return this.vunitRateField;
            }
            set
            {
                this.vunitRateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }
}